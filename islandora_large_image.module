<?php

/**
 * Implements hook_menu().
 */
function islandora_large_image_menu() {
  $items = array();
  $items['admin/islandora/large_image'] = array(  // @TODO: solution pack admin pages one nested deeper?
    'title' => 'Large Image collection', // @TODO: should this just be named 'Large image'? are configuring the collection or the solution pack?
    'description' => 'Configure the Large Image solution pack.',
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('islandora_large_image_admin'),
    'file' => 'admin/islandora_large_image.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_theme().
 *
 * We supply a pattern so we can overide templates at the theme level if needed.
 * we can append a pid to a template and the new template file will be called (the pids
 * colon should be replaced with a dash)
 * @return array
 */
function islandora_large_image_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_large_image' => array(
      'template' => 'theme/islandora-large-image',
      'pattern' => 'islandora_large_image__', //we can add pids to the end of this pattern in our preprocess function
      // and templates will be able to have have a pid appended to the template name to overide a template on a per object basis
      //an example template would be named islandora-basic-image--islandora-27.tpl.phps
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_large_image_viewers_table' => array(
      'file' => 'admin/islandora_large_image.admin.inc',
      'render element' => 'form',
    ),
  );
}

/**
 * Implements hook_islandora_required_objects().
 * @return type 
 */
function islandora_large_image_islandora_required_objects() {

  // module path
  $module_path = drupal_get_path('module', 'islandora_large_image');

  return array(
    'islandora_large_image' => array(
      'title' => 'Islandora large image',
      'objects' => array(
        array(
          'pid' => 'islandora:sp_large_image_cmodel',
          'label' => 'Islandora large image content model',
          'cmodel' => 'fedora-system:ContentModel-3.0',
          'datastreams' => array(
            array(
              'dsid' => 'ISLANDORACM',
              'label' => 'Islandora content model',
              'mimetype' => 'text/xml',
              'control_group' => 'X',
              'datastream_file' => "$module_path/xml/islandora_sp_large_image_cmodel.xml",
            ),
            array(
              'dsid' => 'DS-COMPOSITE-MODEL',
              'label' => 'DS-COMPOSITE-MODEL',
              'mimetype' => 'text/xml',
              'control_group' => 'X',
              'datastream_file' => "$module_path/xml/islandora_large_image_ds_composite_model.xml",
            ),
          ),
        ),
        array(
          'pid' => 'islandora:sp_large_image_collection',
          'label' => 'Large image collection',
          'cmodel' => 'islandora:collectionCModel',
          'parent' => 'islandora:root',
          'datastreams' => array(
            array(
              'dsid' => 'TN',
              'label' => 'Thumbnail',
              'mimetype' => 'image/png',
              'control_group' => 'M',
              'datastream_file' => "$module_path/images/folder.png",
            ),
            array(
              'dsid' => 'COLLECTION_POLICY',
              'label' => 'Collection policy',
              'mimetype' => 'text/xml',
              'control_group' => 'X',
              'datastream_file' => "$module_path/xml/islandora_large_image_collection_policy.xml",
            ),
          ),
        ),
      ),
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function islandora_large_image_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_large_image');
  return array(
    'Large image MODS form' => array(
      'form_file' => "$module_path/xml/islandora_large_image_form_mods.xml",
    ),
  );
}

/**
 * Implements hook_islandora_content_model_forms_form_associations().
 */
function islandora_large_image_islandora_content_model_forms_form_associations() {
  return array(
    'islandora_large_image_mods_form' => array(
      'content_model' => 'islandora:sp_large_image_cmodel',
      'form_name' => 'Large image MODS form',
      'dsid' => 'MODS',
      'title_field' => "['titleInfo']['title']",
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
  );
}

/**
 * Implements hook_islandora_get_types().
 *
 * tells the main module what types of objects we support.  This is used to determine whether or not
 * this module should attempt to respond.
 * @return array
 *   array of content model pids that this module supports
 */
function islandora_large_image_islandora_get_types() {
  $types = array();
  $types['islandora:sp_large_image_cmodel'][ISLANDORA_VIEW_HOOK] = variable_get('islandora_large_image_use_for_default_tab', TRUE);
  //$types['islandora:sp_large_image_cmodel'][ISLANDORA_EDIT_HOOK] = FALSE;
  return $types;
}

/**
 * this modules implentation of view_object hook will handle objects of type islandora:sp_large_image_cmodel
 * as registered in its return types
 * Other modules would handle objects of other types.
 * @param Object $object
 *    a tuque fedora object
 * @param object $user
 * @param string $page_number
 * @param string $page_size
 * @return string
 *    themed html
 */
function islandora_large_image_islandora_view_object($object, $user, $page_number, $page_size) {
  //global $user;
  $cmodel_list = islandora_large_image_islandora_get_types();
  $models = $object->models;
  foreach ($object->models as $model) {
    if (isset($cmodel_list[$model][ISLANDORA_VIEW_HOOK]) && $cmodel_list[$model][ISLANDORA_VIEW_HOOK] == TRUE) { // @TODO: does a foreach loop, but only returns one?
      $output = theme('islandora_large_image', array('islandora_object' => $object));
      return array('' => $output);
    }
  }
  return NULL;
}

/**
 * Implements hook_islandora_ingest_post_ingest().
 */
function islandora_large_image_islandora_ingest_post_ingest($object) {
  $cmodel_list = islandora_large_image_islandora_get_types();
  if (!isset($cmodel_list)) {
    return ;
  }
  $models = $object->models;
  if (!isset($models)) {
    return ;
  }
  foreach ($models as $model) {
    if (isset($cmodel_list[$model])) {
      module_load_include('inc', 'islandora_large_image', 'includes/islandora_large_image.process');
      islandora_large_image_create_all_derivatives($object);
    }
  }
}

/**
 *
 * @global type $base_url
 * @param array $variables
 *   an array of variables that will be passed to the theme function
 */
function islandora_large_image_preprocess_islandora_large_image(&$variables) {
  global $base_url;

  // include js
  drupal_add_js('misc/form.js');
  drupal_add_js('misc/collapse.js');
  $islandora_object = $variables['islandora_object'];
  $repository = $islandora_object->repository;
  module_load_include('inc', 'islandora', 'includes/islandora_dublin_core');
  module_load_include('inc', 'islandora', 'includes/datastream');
  // get dc metadata
  try {
    $dc = $islandora_object['DC']->content;
    $dc_object = Dublin_Core::import_from_xml_string($dc);
  } catch (Exception $e) {
    drupal_set_message(t('Error retrieving object %s %t', array('%s' => $islandora_object->id, '%t' => $e->getMessage())), 'error', FALSE);
  }
  // set variables
  $variables['islandora_dublin_core'] = isset($dc_object) ? $dc_object : NULL;
  $variables['dc_array'] = isset($dc_object) ? $dc_object->as_formatted_array() : array();
  $variables['islandora_object_label'] = $islandora_object->label;
  $variables['theme_hook_suggestions'][] = 'islandora_large_image__' . str_replace(':', '_', $islandora_object->id);
  $variables['parent_collections'] = islandora_datastream_get_parents($islandora_object);

  // set OBJ
  if (isset($islandora_object['OBJ'])) {
    $full_size_url = $base_url . '/islandora/object/' . $islandora_object->id . '/datastream/OBJ/view';
    $variables['islandora_full_url'] = $full_size_url;
    $variables['islandora_full_img'] = '<img src="' . $full_size_url . '"/>';
  }
  // set Thumbnail
  if (isset($islandora_object['TN'])) {
    $thumbnail_size_url = $base_url . '/islandora/object/' . $islandora_object->id . '/datastream/TN/view';
    $variables['islandora_thumbnail_img'] = '<img src="' . $thumbnail_size_url . '"/>';
  }
  // set medium sized JPG
  if (isset($islandora_object['JPG'])) {
    $medium_size_url = $base_url . '/islandora/object/' . $islandora_object->id . '/datastream/JPG/view';
    $variables['islandora_medium_img'] = '<img src="' . $medium_size_url . '"/>';
  }
  // viewer
  $viewer_id = _islandora_large_image_get_viewer_id();
  if ($viewer_id !== FALSE AND $viewer_id != 'none') {
    // get function callback
    $viewer_callback = _islandora_large_image_get_viewer_callback($viewer_id);
    // get image url
    $image_url = _islandora_large_image_get_viewer_url($islandora_object->id);
    // call viewer
    if ($viewer_callback !== FALSE) {
      $variables['islandora_viewer'] = $viewer_callback($image_url);      
    }
  }
}

/**
 * Get the url to be passed to the viewer.
 */
function _islandora_large_image_get_viewer_url($object_id = NULL) {
  global $base_url;
  if ($object_id !== NULL) {
    // get viewer settings
    $viewers_config = variable_get('islandora_large_image_viewers', array());
    if (!empty($viewers_config) AND isset($viewers_config['default'])) {
      $viewer = $viewers_config['default'];
      $dsid = $viewers_config['dsid'][$viewer];
      // create url
      $url = $base_url . '/islandora/object/' . $object_id . '/datastream/' . $dsid . '/view';
      return $url;
    }
  }
  return FALSE;
}

/**
 * Get id of the enabled viewer.
 */
function _islandora_large_image_get_viewer_id() {
  $viewers_config = variable_get('islandora_large_image_viewers', array());
  if (!empty($viewers_config)) {
    return $viewers_config['default'];
  }
  return FALSE;
}

/**
 * Get callback function for a viewer.
 */
function _islandora_large_image_get_viewer_callback($viewer_id = NULL) {
  if ($viewer_id !== NULL) {
    // get defined viewers
    $viewers = module_invoke_all('islandora_large_image_get_viewer');
    if (isset($viewers[$viewer_id]['callback'])) {
      // return callback function
      return $viewers[$viewer_id]['callback'];      
    }
  }
  return FALSE;
}

